{"ast":null,"code":"var _jsxFileName = \"/Users/deepakkumar/robofriends/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport CardList from './CardList';\nimport SearchBox from './SearchBox';\nimport Scroll from './Scroll';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [robots, setRobots] = useState([]);\n  const [searchfield, setSearchfield] = useState('');\n  const [count, setCount] = useState(0); // for demo purposes\n\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(users => {\n      setRobots(users);\n    }); // console.log(count)\n  }, []); // if you add count, only run if count changes.\n\n  const onSearchChange = event => {\n    setSearchfield(event.target.value);\n  };\n\n  const filteredRobots = robots.filter(robot => {\n    return robot.name.toLowerCase().includes(searchfield.toLowerCase());\n  });\n  return !robots.length ? /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Loading\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tc\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"f1\",\n      children: \"RoboFriends\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCount(count + 1),\n      children: \"Click Me!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(SearchBox, {\n      searchChange: onSearchChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Scroll, {\n      children: /*#__PURE__*/_jsxDEV(CardList, {\n        robots: filteredRobots\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"AxB53IyR32I/Fq8BaumcFKh7AVk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/deepakkumar/robofriends/src/App.js"],"names":["React","useState","useEffect","CardList","SearchBox","Scroll","App","robots","setRobots","searchfield","setSearchfield","count","setCount","fetch","then","response","json","users","onSearchChange","event","target","value","filteredRobots","filter","robot","name","toLowerCase","includes","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAO,WAAP;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACQ,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,CAAD,CAAlC,CAHa,CAGyB;;AAEtCC,EAAAA,SAAS,CAAC,MAAK;AACbW,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACGC,IADH,CACQC,QAAQ,IAAGA,QAAQ,CAACC,IAAT,EADnB,EAEGF,IAFH,CAEQG,KAAK,IAAI;AAACT,MAAAA,SAAS,CAACS,KAAD,CAAT;AAAiB,KAFnC,EADa,CAIb;AACD,GALQ,EAKP,EALO,CAAT,CALa,CAUP;;AAEN,QAAMC,cAAc,GAAIC,KAAD,IAAW;AAChCT,IAAAA,cAAc,CAACS,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;AACD,GAFD;;AAIA,QAAMC,cAAc,GAAGf,MAAM,CAACgB,MAAP,CAAcC,KAAK,IAAG;AAC3C,WAAOA,KAAK,CAACC,IAAN,CAAWC,WAAX,GAAyBC,QAAzB,CAAkClB,WAAW,CAACiB,WAAZ,EAAlC,CAAP;AACD,GAFsB,CAAvB;AAIA,SAAO,CAACnB,MAAM,CAACqB,MAAR,gBACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADK,gBAGH;AAAK,IAAA,SAAS,EAAC,IAAf;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAE,MAAIhB,QAAQ,CAACD,KAAK,GAAC,CAAP,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,SAAD;AAAW,MAAA,YAAY,EAAEO;AAAzB;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,MAAD;AAAA,6BACE,QAAC,QAAD;AAAU,QAAA,MAAM,EAAEI;AAAlB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UAHJ;AAYD;;GAhCQhB,G;;KAAAA,G;AAkCT,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport CardList from './CardList';\nimport SearchBox from './SearchBox';\nimport Scroll from './Scroll';\nimport './App.css';\n\nfunction App() {\n  const [robots, setRobots] = useState([])\n  const [searchfield, setSearchfield] = useState('')\n  const [count, setCount] = useState(0) // for demo purposes\n\n  useEffect(()=> {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response=> response.json())\n      .then(users => {setRobots(users)});\n    // console.log(count)\n  },[]) // if you add count, only run if count changes.\n\n  const onSearchChange = (event) => {\n    setSearchfield(event.target.value)\n  }\n\n  const filteredRobots = robots.filter(robot =>{\n    return robot.name.toLowerCase().includes(searchfield.toLowerCase());\n  })\n\n  return !robots.length ?\n    <h1>Loading</h1> :\n    (\n      <div className='tc'>\n        <h1 className='f1'>RoboFriends</h1>\n        <button onClick={()=>setCount(count+1)}>Click Me!</button>\n        <SearchBox searchChange={onSearchChange}/>\n        <Scroll>\n          <CardList robots={filteredRobots} />\n        </Scroll>\n      </div>\n    );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}